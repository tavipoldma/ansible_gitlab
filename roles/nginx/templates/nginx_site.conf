server {
    listen          80;
    server_name     {{ item.fqdn }};
	server_tokens 	off;
	return 301 https://$server_name$request_uri;
}

server {
	listen       443 ssl http2;
	server_name  {{ item.fqdn }};
	access_log /var/log/nginx/{{ item.fqdn }}_access.log;
	error_log /var/log/nginx/{{ item.fqdn }}_error.log;
	server_tokens off;

	chunked_transfer_encoding on;
	gzip on;
	resolver {{ docker_network_dns }} valid=300s;
	resolver_timeout 10s;

	ssl_certificate "/etc/nginx/ssl/server.crt";
	ssl_certificate_key "/etc/nginx/ssl/server.key";

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

	#ssl_dhparam /etc/nginx/ssl/dhparam.pem;
	ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 5m;

{% for location in item.locations %}
	location {{ location.path }} {

	client_max_body_size 1000M;
	add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

	proxy_read_timeout      600;
	proxy_connect_timeout   600;

	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection "Upgrade";

	proxy_set_header  Host                $http_host;
	proxy_set_header  X-Forwarded-Host    $host;
	proxy_set_header  X-Forwarded-Server	$host;
	proxy_set_header  X-Real-IP           $remote_addr;
	proxy_set_header  X-Forwarded-Port    443;
	proxy_set_header  X-Forwarded-Ssl     on;
	proxy_set_header  X-Forwarded-For     $proxy_add_x_forwarded_for;
	proxy_set_header  X-Forwarded-Proto   $scheme;
	proxy_redirect    http://  			      $scheme://;
	proxy_pass        {{ location.proxy_pass }};
	proxy_cache       off;

  }

{% endfor %}

}

